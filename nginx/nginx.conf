load_module /usr/lib/nginx/modules/ndk_http_module.so;
load_module /usr/lib/nginx/modules/ngx_http_lua_module.so;
# load_module /usr/lib/nginx/modules/ngx_stream_lua_module.so;

pcre_jit on;

error_log /var/log/nginx/error.log warn;

events {
    worker_connections 1024;
}


http {
    log_format main '{'
                      '"remote_addr": "$remote_addr", '
                      '"remote_user": "$remote_user", '
                      '"time_local": "$time_local", '
                      '"request": "$request", '
                      '"status": "$status", '
                      '"body_bytes_sent": "$body_bytes_sent", '
                      '"http_referer": "$http_referer", '
                      '"http_user_agent": "$http_user_agent", '
                      '"http_x_forwarded_for": "$http_x_forwarded_for", '
                      '"filtered_request_body": "$filtered_request_body", '
                      '"filtered_response_body": "$filtered_response_body"'
                    '}';
    access_log /var/log/nginx/access.log main;

    # map $request_body $filtered_request_body {
    #     default $request_body ;
    #     ~(.*)pass=[^&]*(.*) $1pass=[FILTERED_IN_MAP]$2 ;
    # }
    server {
        listen 80;
        set $filtered_request_body $request_body;
        set $filtered_response_body "";

        # location / {
        #     default_type 'text/plain';
        #     content_by_lua_file /etc/nginx/lua_scripts/main.lua;
        # }
        location / {
            access_log off;
            proxy_pass http://192.168.1.101:5001;
        }
        location /chat {
            # content_by_lua_file /etc/nginx/lua_scripts/main.lua;
            proxy_pass http://192.168.1.101:5001;
            access_by_lua_block {
                -- post check
                local method_name = ngx.req.get_method()
                if method_name == "POST" then
                    -- request_body
                    ngx.req.read_body()
                    -- POST check
                    -- local args, err = ngx.req.get_post_args()
                    local data = ngx.req.get_body_data()

                    -- substitute hoge value
                    local newstr, n, err = ngx.re.gsub(data, "hoge", "fugo", "i")
                    ngx.var.filtered_request_body = newstr
                end 
            }
            body_filter_by_lua_block {
                ngx.ctx.buffer = (ngx.ctx.buffer or "") .. (ngx.arg[1] or "")
                if ngx.arg[2] then
                    ngx.var.filtered_response_body = ngx.ctx.buffer
                end
            }
            header_filter_by_lua_block {
                ngx.header.content_length = nil
            }
        }

        location /app {
            # content_by_lua_file /etc/nginx/lua_scripts/main.lua;
            proxy_pass http://lua-app:5000;
            access_by_lua_block {
                -- post check
                local method_name = ngx.req.get_method()
                if method_name == "POST" then
                    -- request_body
                    ngx.req.read_body()
                    -- POST check
                    -- local args, err = ngx.req.get_post_args()
                    local data = ngx.req.get_body_data()

                    -- substitute hoge value
                    local newstr, n, err = ngx.re.gsub(data, "hoge", "fugo", "i")
                    ngx.var.filtered_request_body = newstr
                    -- -- without POST data
                    -- if not args then
                    -- -- null to filtered_request_body
                    --     ngx.var.filtered_request_body = "null"
                    --     return
                    -- end
                    -- -- ngx.var.filtered_request_body = ""
                    -- -- loop POST data and substitute pass value
                    -- for key, val in pairs(args) do
                    --     if key == "pass" then
                    --         ngx.var.filtered_request_body = ngx.var.filtered_request_body .. "&" .. key .. "=[FILTERED_IN_LUA]"
                    --     else
                    --         -- ngx.req.get_post_args()
                    --         if type(val) == "table" then
                    --             ngx.var.filtered_request_body = ngx.var.filtered_request_body .. "&" .. table.concat(key , val, "=" )
                    --         else
                    --             ngx.var.filtered_request_body = ngx.var.filtered_request_body .. "&" .. key .. "=" .. val
                    --         end
                    --     end
                    -- end
                end 
            }
            body_filter_by_lua_block {
                ngx.ctx.buffer = (ngx.ctx.buffer or "") .. (ngx.arg[1] or "")
                if ngx.arg[2] then
                    ngx.var.filtered_response_body = ngx.ctx.buffer
                end
                -- ngx.arg[1] = "hoge2" .. ngx.arg[1]
                -- ngx.arg[1] = string.upper(ngx.arg[1])
                -- print(ngx.arg[1])
                -- ngx.log(ngx.WARN, ngx.arg[1])
            }
            header_filter_by_lua_block {
                ngx.header.content_length = nil
            }
        }

        location /hello {
            default_type 'text/plain';
            content_by_lua_block {
                ngx.say('Hello, world!')
            }
        }
    }
}
