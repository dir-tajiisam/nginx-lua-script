{
  "name": "lua-scripts",
  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind",
    "source=${localEnv:HOME}${localEnv:USERPROFILE}/.ssh,target=/tmp/.ssh,type=bind,consistency=cached",
    "source=${localWorkspaceFolder}/.git,target=/tmp/.git,type=bind,consistency=cached"
  ],
  "dockerFile": "Dockerfile",
  "remoteUser": "lua",
  "updateRemoteUserUID": true,
  "runArgs": [
    "--name",
    "lua-dev-container",
    "--network",
    "lua-nginx-container-link"
  ],
  "customizations": {
    "vscode": {
      "extensions": [
        "esbenp.prettier-vscode",
        "donjayamanne.githistory",
        "GitHub.vscode-pull-request-github",
        "mosapride.zenkaku",
        "ms-python.black-formatter",
        "ms-python.flake8",
        "ms-python.isort",
        "ms-python.mypy-type-checker",
        "ms-python.python",
        "ms-python.vscode-pylance",
        "njpwerner.autodocstring",
        "oderwat.indent-rainbow",
        "rvest.vs-code-prettier-eslint",
        "streetsidesoftware.code-spell-checker",
        "yzhang.markdown-all-in-one",
        "eamodio.gitlens"
      ],
      "settings": {
        "defaultFormatter": "esbenp.prettier-vscode",
        "python.defaultInterpreterPath": ".venv/bin/python",
        "python.formatting.provider": "none",
        "python.envFile": "${workspaceFolder}/.vscode/.env",
        "[python]": {
          "editor.defaultFormatter": "ms-python.black-formatter",
          "editor.formatOnSave": true,
          "editor.codeActionsOnSave": {
            "source.organizeImports": true
          },
          "flake8.lintOnChange": true
        },
        "python.testing.pytestPath": ".venv/bin/pytest",
        "python.testing.pytestArgs": ["tests", "-vv"],
        "python.testing.pytestEnabled": true,
        "flake8.args": ["--max-line-length=120", "--ignore=E203,W503,W504"],
        "black-formatter.args": ["--line-length=120"],
        "mypy-type-checker.args": [
          "--ignore-missing-imports",
          "--disallow-untyped-defs"
        ]
      }
    }
  },
  "initializeCommand": "bash ./.devcontainer/network.sh",
  "postStartCommand": "bash ./.devcontainer/postStartCommand.sh",
  "forwardPorts": [8888]
}
